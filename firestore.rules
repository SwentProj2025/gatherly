rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules

    // --- PROFILES ---
        match /profiles/{userId} {
          // Only the authenticated user can read/write their own profile
          //allow read, write: if request.auth != null && request.auth.uid == userId;
          allow read: if request.auth != null;
          allow write: if request.auth != null && request.auth.uid == userId;
        }

    // --- USERNAMES ---
        match /usernames/{username} {
          // Authenticated users can read/write usernames (needed for registration)
          allow read, write: if request.auth != null;
        }

    // --- TODOS ---
        // Each user's todos are stored under /users/{userId}/todos/{todoId}
        match /users/{userId}/todos/{todoId} {
          // Allow reading/writing only if the authenticated user matches the userId.
          allow read, write: if request.auth != null && request.auth.uid == userId;

          // Optional stronger check on creation:
          // The ToDo being created must also have ownerId == request.auth.uid.
          allow create: if request.auth != null
                        && request.auth.uid == userId
                        && request.resource.data.ownerId == request.auth.uid;
        }

  }
}